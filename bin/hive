#!/usr/bin/env ruby

require 'logger'

require 'eventmachine'
require 'highline/import'
require 'json'
require 'thor'

$LOAD_PATH.unshift(File.expand_path('../../lib', __FILE__))
require 'hive'
require 'hive/client'
require 'hive/server'

class HiveApp < Thor
  desc 'server', ''
  method_option :port, :default => 3000
  def server
    EM.run do
      s = Hive::Server.new(:port => options[:port])
      s.logger = Logger.new(STDOUT)
      s.logger.level = Logger::INFO
      s.start
    end
  end

  desc 'game', ''
  method_option :host, :default => '0.0.0.0'
  method_option :port, :default => 3000
  method_option :create, :type => :boolean, :default => false
  def game
    EM.run do
      client = EM.connect(options[:host], options[:port], Hive::Client)

      if options[:create]
        def client._create_game
          super
          say("Created game ##{@body['id']}")
          exit
        end

        client.create_game
      end
    end
  end
  
  desc 'client NAME', ''
  method_option :host, :default => '0.0.0.0'
  method_option :port, :default => 3000
  def client(name)
    EM.run do
      client = EM.connect(options[:host], options[:port], Hive::CLIClient)
      client.register(name)
      client.games
    end
  end

  desc 'random_bot GAME_ID', ''
  method_option :host, :default => '0.0.0.0'
  method_option :port, :default => 3000
  method_option :name, :default => 'RandomBot'
  def random_bot(game_id)
    EM.run do
      bot = EM.connect(options[:host], options[:port], Hive::RandomBot)
      bot.register(options[:name])
      bot.join_game(game_id.to_i)
    end
  end
end

if $0 == __FILE__
  HiveApp.start
end
